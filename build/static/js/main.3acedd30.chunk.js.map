{"version":3,"sources":["redux/inventory-reducer.js","redux/user-reducer.js","components/Header/HeaderUser.js","api/api.js","redux/app-reducer.js","panels/Home.js","panels/Base.js","img/persik.png","panels/Inventory.js","panels/Friends.js","panels/Action/ActionNavigator.js","panels/Action/Attack/AttackFriends.js","panels/Action/Attack/AttackOther.js","panels/Action/Attack/Attack.js","creator/DescriptionCreator.js","redux/auth-reducer.js","creator/TimerCreator.js","panels/Action/Attack/AttackUserPage.js","actionCalculation/launchRoket.js","components/Header/HeaderOther.js","assets/images/moneyBackground.jpg","assets/images/workerBackground.jpg","panels/PageView/CheckUserInfo.js","panels/PageView/PageView.js","App.js","text/Description.js","redux/time-reducer.js","redux/redux-store.js","index.js","panels/PageView/PageView.module.css"],"names":["CHANGE_MONEY","CHANGE_HOUSE","CHANGE_PEOPLE","CHANGE_ROKET","CHANGE_FOOD","SET_INVENTORY","init","money","house","people","roket","food","changeMoney","change","type","changeHouse","changePeople","changeRoket","changeFood","changeInventory","num","func","dispatch","setInventory","set","SET_FRIENDS","SET_USER","SET_ACTIVE_USER_PAGE","user","friends","activeUserPage","setActiveUserPage","id","connect","state","myInventory","usersInfo","go","backButton","headerName","left","onClick","header","mode","before","photo_200","src","description","city","title","after","style","display","alignItems","color","width","height","first_name","last_name","DB_TIMER_START","DB_TIMER_TIME","firebaseAPI","userId","firebase","database","ref","String","on","snapshot","val","inventory","obj","child","update","timerName","info","time","get","SET_ACTIVE_PANEL","activePanel","e","active","currentTarget","dataset","to","stretched","size","ImgSize","PictureName","Icon24DollarCircleOutline","Icon44SmileOutline","Icon24HomeOutline","Icon24SendOutline","Icon28MortarOutline","auth","inv","Object","keys","map","key","Pic","friendsGroup","u","entryFriendsProfile","photo_200_orig","caption","onChangeMoney","AttackOther","useState","activeTabs","setActiveTabs","selected","DescriptionCreator","create","what","desc","SET_INIT_SUCCESS","SET_ACCESS_TOKEN","INIT_DATE","accessToken","a","name","repeat","consoleView","_time","oneTimer","entry","diff","GetServerTime","offset","offsetVal","Date","now","CreateTimerBD","TimerFunc","timer","setInterval","clearInterval","then","startTimer","timerTime","TimerCreator","inventoryProfile","roketSend","setRoketSend","roketRange","value","Number","min","max","onChange","target","step","countRoket","UserId","inventoryTarget","console","log","launchRoket","userPageInfo","find","CheckUserInfo","BackgroundName","MoneyBackground","WorkerBackground","className","styles","card","alt","getUserInfo","setGetUserInfo","useEffect","getUser","APP_ID","appPage","setDbInventory","setFriends","setUser","setInitSuccess","getDbInventory","forEach","setAccessToken","token","props","setGiveGold","popout","setPopout","bridge","send","userInfo","access_token","userFriends","response","items","subscribe","detail","data","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","initTimer","DescriptionPanels","MoneyDesc","PeopleDesc","HouseDesc","RoketDesc","FoodDesc","DescPanelsBlocks","DescPanel","charAt","toLowerCase","slice","SET_ENTRY","SET_OLD_ENTRY","SET_TIMER","oldEntry","reducers","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","rerenderEntireTree","ReactDOM","render","getElementById","getState","module","exports"],"mappings":"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","file":"static/js/main.3acedd30.chunk.js","sourcesContent":["export const CHANGE_MONEY = \"INVENTORY/CHANGE_MONEY\"\r\nexport const CHANGE_HOUSE = \"INVENTORY/CHANGE_HOUSE\"\r\nexport const CHANGE_PEOPLE = \"INVENTORY/CHANGE_PEOPLE\"\r\nexport const CHANGE_ROKET = \"INVENTORY/CHANGE_ROKET\"\r\nexport const CHANGE_FOOD = \"INVENTORY/CHANGE_FOOD\"\r\nexport const SET_INVENTORY = \"INVENTORY/SET_INVENTORY\"\r\nlet init = {\r\n    money:0,\r\n    house:0,\r\n    people:0,\r\n    roket:0,\r\n    food:0,\r\n};\r\n\r\nexport const inventoryReducer = (state = init, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_MONEY:\r\n            return {\r\n                ...state,\r\n                money:state.money + action.change,\r\n            }\r\n        case CHANGE_HOUSE:\r\n            return {\r\n                ...state,\r\n                house:state.house + action.change,\r\n            }\r\n        case CHANGE_PEOPLE:\r\n            return {\r\n                ...state,\r\n                people:state.people + action.change,\r\n            }\r\n        case CHANGE_ROKET:\r\n            return {\r\n                ...state,\r\n                roket:state.roket + action.change,\r\n            }\r\n        case CHANGE_FOOD:\r\n            return {\r\n                ...state,\r\n                food:state.food + action.change,\r\n            }\r\n        case SET_INVENTORY:\r\n            return action.setInventory\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const changeMoney = (change) => {\r\n    return {\r\n        type: CHANGE_MONEY,\r\n        change,\r\n    };\r\n};\r\nexport const changeHouse = (change) => {\r\n    return {\r\n        type: CHANGE_HOUSE,\r\n        change,\r\n    };\r\n};\r\nexport const changePeople = (change) => {\r\n    return {\r\n        type: CHANGE_PEOPLE,\r\n        change,\r\n    };\r\n};\r\nexport const changeRoket = (change) => {\r\n    return {\r\n        type: CHANGE_ROKET,\r\n        change,\r\n    };\r\n};\r\nexport const changeFood = (change) => {\r\n    return {\r\n        type: CHANGE_FOOD,\r\n        change,\r\n    };\r\n};\r\nexport const changeInventory = (type,num) => {\r\n    let func = \"\"\r\n    switch (type){\r\n        case CHANGE_MONEY:\r\n           func = changeMoney\r\n           break\r\n        case CHANGE_HOUSE:\r\n            func = changeHouse\r\n            break\r\n        case CHANGE_PEOPLE:\r\n            func = changePeople\r\n            break\r\n        case CHANGE_ROKET:\r\n            func = changeRoket\r\n            break\r\n        case CHANGE_FOOD:\r\n            func = changeFood\r\n            break\r\n        default:\r\n            break \r\n    }\r\n    return (dispatch) => {\r\n        dispatch(func(num))\r\n    }\r\n}\r\n\r\nexport const setInventory = (set) => {\r\n    return {\r\n        type: SET_INVENTORY,\r\n        setInventory:set,\r\n    };\r\n};","const SET_FRIENDS = \"USERS/SET_FRIENDS\"\r\nconst SET_USER = \"USERS/SET_USER\"\r\nconst SET_ACTIVE_USER_PAGE = \"USERS/SET_ACTIVE_USER_PAGE\"\r\nlet init = {\r\n    user:null,\r\n    friends:null,\r\n    activeUserPage:1,\r\n};\r\n\r\nexport const userReducer = (state = init, action) => {\r\n    switch (action.type) {\r\n        case SET_FRIENDS:\r\n            return{\r\n                ...state,\r\n                friends:action.friends\r\n            }\r\n        case SET_USER:\r\n            return{\r\n                ...state,\r\n                user:action.user\r\n            }\r\n        case SET_ACTIVE_USER_PAGE:\r\n            return{\r\n                ...state,\r\n                activeUserPage:action.id\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const setFriends = (friends) => {\r\n    return {\r\n      type: SET_FRIENDS,\r\n      friends,\r\n    };\r\n};\r\n\r\nexport const setUser = (user) => {\r\n    return {\r\n      type:SET_USER,\r\n      user,\r\n    };\r\n};\r\n\r\nexport const setActiveUserPage = (id) => {\r\n    return {\r\n      type:SET_ACTIVE_USER_PAGE,\r\n      id,\r\n    };\r\n};\r\n","import React from 'react';\r\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar,PanelHeaderBack, InfoRow, SimpleCell, Card, CardGrid, Link } from '@vkontakte/vkui';\r\nimport { Icon24DollarCircleOutline } from '@vkontakte/icons';\r\nimport { connect } from 'react-redux';\r\nimport {changeInventory} from \"../../redux/inventory-reducer\"\r\nimport {setFriends} from \"../../redux/user-reducer\"\r\nimport {setUser} from \"../../redux/user-reducer\"\r\nconst HeaderUser = ({go,backButton,headerName,user,money}) =>{\r\n    return(\r\n            <>\r\n            {backButton ? \r\n            <PanelHeader\r\n                left={<PanelHeaderBack onClick={go} data-to={backButton}/>}\r\n            >\r\n                {headerName}\r\n            </PanelHeader>\r\n            :\r\n            <PanelHeader>\r\n                {headerName}\r\n            </PanelHeader>\r\n            }\r\n        \r\n            {user &&\r\n            <Group header={<Header mode=\"secondary\">Your profile</Header>}>\r\n                <Cell \r\n                    before={user.photo_200 ? <Avatar src={user.photo_200}/> : null}\r\n                    description={user.city && user.city.title ? user.city.title : ''}\r\n                    after={<div style={{display:'flex',alignItems:'center',color:'black'}}>{money}<Icon24DollarCircleOutline width={30} height={30}/></div>}\r\n                >\r\n                    {`${user.first_name} ${user.last_name}`}\r\n                </Cell>\r\n            </Group>}\r\n            </>\r\n        )\r\n} \r\n\r\nlet mapStateToProps = (state) => ({\r\n    money:state.myInventory.money,\r\n\tuser:state.usersInfo.user\r\n})\r\n\r\nexport default connect(mapStateToProps)(HeaderUser)","export const DB_USER_MONEY = \"money\";\r\nexport const DB_USER_ROKET = \"roket\";\r\nexport const DB_USER_HOUSE = \"house\";\r\nexport const DB_USER_PEOPLE = \"people\";\r\nexport const DB_USER_FOOD = \"food\";\r\nimport firebase from '../index';\r\n\r\n//updateTimerDB\r\nexport const DB_TIMER_START = \"startTimer\";\r\nexport const DB_TIMER_TIME = \"timerTime\";\r\n\r\nexport  const firebaseAPI = {\r\n    \r\n    listenUpdateUser(userId,setInventory){\r\n        firebase.database().ref(String(userId)).on('value',function(snapshot){\r\n            var val = snapshot.val();\r\n            setInventory(val.inventory)\r\n          });\r\n    },\r\n\r\n    updateUser(userId,item,count){\r\n        firebase.database().ref(String(userId)).child(\"inventory\").update({[item]:count})\r\n    },\r\n    \r\n    updateFullUser(userId,obj){\r\n        firebase.database().ref(String(userId)).child(\"inventory\").update(obj);\r\n    },\r\n    updateEntryTimeBD(userId,time){\r\n        firebase.database().ref(String(userId)).child(\"time\").child(\"timer\").update({\"entry\":time});\r\n    },\r\n    // firstCreateTimer(userId){\r\n\r\n    // }\r\n    updateTimerDB(userId,timerName,info,time){\r\n        firebase.database().ref(String(userId)).child(\"time\").child(\"timer\").child(timerName).update({[info]:time});\r\n    },\r\n    \r\n    //GET\r\n    getTimerDB(userId){\r\n        return firebase.database().ref(String(userId)).child(\"time\").child(\"timer\").get()\r\n    },\r\n    getServerTime(){\r\n        return firebase.database().ref(\"/.info/serverTimeOffset\")\r\n    },\r\n    getUserInventory(userId){\r\n       return firebase.database().ref(String(userId)).child(\"inventory\").get()\r\n    },\r\n    getTimeUserBD(userId){\r\n        return firebase.database().ref(String(userId)).child(\"time\").get()\r\n    },\r\n}\r\n","import { firebaseAPI, DB_USER_MONEY,DB_USER_ROKET,DB_USER_HOUSE,DB_USER_PEOPLE,DB_USER_FOOD  } from \"../api/api\";\r\nimport { CHANGE_MONEY,CHANGE_HOUSE,CHANGE_PEOPLE,CHANGE_ROKET } from './inventory-reducer';\r\nimport {changeInventory,setInventory} from \"./inventory-reducer\"\r\nimport { getUserId } from \"./user-reducer\";\r\nconst SET_ACTIVE_PANEL = \"APP/SET_ACTIVE_PANEL\"\r\nlet init = {\r\n    activePanel:\"base\"\r\n};\r\n\r\nexport const appReducer = (state = init, action) => {\r\n    switch (action.type) {\r\n        case SET_ACTIVE_PANEL:\r\n            return{\r\n                ...state,\r\n                activePanel:action.active,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n\r\nexport const setActivePanel = (active) => {\r\n    return {\r\n        type:SET_ACTIVE_PANEL,\r\n        active,\r\n    };\r\n};\r\n\r\nexport const go = e => (dispatch) => {\r\n    dispatch(setActivePanel(e.currentTarget.dataset.to))\r\n    \r\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar } from '@vkontakte/vkui';\nimport HeaderUser from '../components/Header/HeaderUser';\nimport { connect } from 'react-redux';\nimport { go } from '../redux/app-reducer';\nconst Home = ({ id, go}) => {\n\treturn(\n\t\t<Panel id={id}>\n\t\t\t<HeaderUser headerName=\"Home\"/>\n\n\t\t\t<Group header={<Header mode=\"secondary\">Navigation</Header>}>\n\t\t\t\t<Div>\n\t\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"base\">\n\t\t\t\t\t\tBASE\n\t\t\t\t\t</Button>\n\t\t\t\t</Div>\n\t\t\t</Group>\n\t\t</Panel>\n\t)\n}\n\t\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\nlet mapStateToProps = (state) => ({\n})\nexport default connect(mapStateToProps,{go})(Home)\n// export default Home;\n","import { Button, Div, Group, Header, Panel } from '@vkontakte/vkui';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport HeaderUser from '../components/Header/HeaderUser';\r\nimport { go } from '../redux/app-reducer';\r\nconst Base = ({ id, go}) => {\r\n\t\r\n\t\r\n\t\r\n\treturn(\r\n\t\r\n\t<Panel id={id}>\r\n\t\t<HeaderUser go={go}  headerName=\"Base\" backButton=\"home\"/>\r\n\r\n\t\t<Group header={<Header mode=\"secondary\">Navigation</Header>}>\r\n\t\t\t<Div>\r\n\t\t\t\t<Button stretched size=\"l\"  onClick={go} data-to=\"inventory\">\r\n\t\t\t\t\tInventory\r\n\t\t\t\t</Button>\r\n\t\t\t</Div>\r\n\t\t\t<Div>\r\n\t\t\t\t<Button stretched size=\"l\"  onClick={go} data-to=\"friends\">\r\n\t\t\t\t\tFriends\r\n\t\t\t\t</Button>\r\n\t\t\t</Div>\r\n\t\t\t<Div>\r\n\t\t\t\t<Button stretched size=\"l\"  onClick={go} data-to=\"actionNavigator\">\r\n\t\t\t\t\tAction\r\n\t\t\t\t</Button>\r\n\t\t\t</Div>\r\n\t\t</Group>\r\n\t</Panel>\r\n\t);\r\n}\r\n    \r\n\t\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n})\r\nexport default connect(mapStateToProps,{go})(Base)","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar,PanelHeaderBack, InfoRow, SimpleCell, Card, CardGrid, Link } from '@vkontakte/vkui';\r\nimport { Icon24DollarCircleOutline } from '@vkontakte/icons';\r\nimport { Icon44SmileOutline } from '@vkontakte/icons';\r\nimport { Icon24HomeOutline } from '@vkontakte/icons';\r\nimport { Icon24SendOutline } from '@vkontakte/icons';\r\nimport { Icon28MortarOutline } from '@vkontakte/icons';\r\nimport HeaderUser from '../components/Header/HeaderUser';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { go } from '../redux/app-reducer';\r\n\r\nconst ImgSize = {\r\n    width:30,\r\n    height:30,\r\n}\r\nconst PictureName = {\r\n    money:Icon24DollarCircleOutline,\r\n    people:Icon44SmileOutline,\r\n    house:Icon24HomeOutline,\r\n    roket:Icon24SendOutline,\r\n    food:Icon28MortarOutline,\r\n}\r\nconst Inventory = ({ id, go,inventory }) => {\r\n    \r\n    const inv = Object.keys(inventory).map(key =>{\r\n        const Pic = PictureName[key]\r\n        return(\r\n            <Group key={key} onClick={go} data-to={key + \"Desc\"}>\r\n                <SimpleCell>\r\n                <Header mode=\"secondary\">{key}</Header>\r\n                <Div><div style={{display:'flex',alignItems:'center'}}>{inventory[key]}<Pic width={ImgSize.width} height={ImgSize.height}/></div>  </Div>\r\n                     \r\n                </SimpleCell>\r\n            </Group>\r\n        )    \r\n    })\r\n    return(          \r\n        \r\n        <Panel id={id}>\r\n            <HeaderUser go={go}  headerName=\"Inventory\" backButton=\"base\"/>\r\n            {inv}\r\n        </Panel>\r\n        );\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n\tinit:state.auth.init,\r\n    inventory:state.myInventory\r\n})\r\n\r\nexport default connect(mapStateToProps,{go})(Inventory)\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar,PanelHeaderBack, CardGrid, Card, RichCell } from '@vkontakte/vkui';\r\nimport { Icon24DollarCircleOutline } from '@vkontakte/icons';\r\nimport HeaderUser from '../components/Header/HeaderUser';\r\nimport { setActiveUserPage } from '../redux/user-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { go } from '../redux/app-reducer';\r\nconst Friends = ({ id, go,friends,setActiveUserPage}) => {\t\r\n\tconst entryFriendsProfile = (e,id) => {\r\n\t\tsetActiveUserPage(id)\r\n\t\tgo(e)\r\n\t}\r\n\tconst friendsGroup\t= friends.map(u =>(\r\n\t\t<RichCell onClick={(e) => entryFriendsProfile(e,u.id)}\r\n\t\tdata-to=\"pageView\"\r\n\t\t\tkey={u.id}\r\n\t\t\tbefore={<Avatar size={48} src={u.photo_200_orig} />}\r\n\t\t\tcaption=\"offline\"\r\n\t\t\tafter={<div><span style={{display:'flex',alignItems:'center',color:'black'}}>{700}<Icon24DollarCircleOutline width={30} height={30}/></span></div>}\r\n\t\t\t>\r\n\t\t\t\t{u.first_name +\" \"+ u.last_name}\r\n\t\t</RichCell>\r\n\t))\r\n\t\r\n\t// <Card key={u.id}>{<img style={{width:\"100%\",height:\"200px\"}} src={}/>}</Card>)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n    return(\r\n\t\t<Panel id={id}>\r\n\t\t\t\t<HeaderUser go={go} headerName=\"Friends\" backButton=\"base\"/>\r\n\r\n\t\t\t\t<Group header={<Header mode=\"secondary\">Your Friends</Header>}>\r\n\t\t\t\t\t\t{friendsGroup}\r\n\t\t\t\t</Group>\r\n\t\t\t</Panel>\r\n\t\t)\r\n}\r\nconst mapStateToProps  = (state) => ({\r\n\tfriends:state.usersInfo.friends,\r\n})\r\nexport default connect(mapStateToProps,{setActiveUserPage,go})(Friends)\r\n","import React from 'react';\r\nimport * as axios from \"axios\";\r\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar,PanelHeaderBack } from '@vkontakte/vkui';\r\nimport { Icon24DollarCircleOutline } from '@vkontakte/icons';\r\nimport { changeInventory, CHANGE_MONEY,CHANGE_ROKET } from '../../redux/inventory-reducer';\r\nimport HeaderUser from '../../components/Header/HeaderUser';\r\nimport { go } from '../../redux/app-reducer';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst ActionNavigator = ({changeInventory,go,id}) => {\r\n\tconst  onChangeMoney = (num) => {\r\n\t\tchangeInventory(CHANGE_MONEY,num)\r\n\t}\r\n\tconst  Attack = (e) => {\r\n\t\tchangeInventory(CHANGE_ROKET,-1)\r\n\t\tgo(e)\r\n\t}\r\n\treturn(\r\n\t<Panel id={id}>\r\n        <HeaderUser  go={go}headerName=\"Action Navigator\" backButton=\"base\"/>\r\n        <Group header={<Header mode=\"secondary\">Your actions</Header>}>\r\n            <Div>\r\n\t\t\t\t<Button stretched size=\"l\"  onClick={() => onChangeMoney(-10)}>\r\n                Building\r\n\t\t\t\t</Button>\r\n\t\t\t</Div>\r\n            <Div>\r\n\t\t\t\t<Button stretched size=\"l\"  onClick={Attack} data-to=\"attack\">\r\n                Attack\r\n\t\t\t\t</Button>\r\n\t\t\t</Div>\r\n            <Div>\r\n\t\t\t\t<Button stretched size=\"l\"  onClick={() => onChangeMoney(-10)}>\r\n                Defense\r\n\t\t\t\t</Button>\r\n\t\t\t</Div>\r\n        </Group> \r\n        \r\n        \r\n\t</Panel>)\r\n};\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n})\r\n\r\nexport default connect(mapStateToProps,{go,changeInventory})(ActionNavigator)\r\n","import React, { useState } from 'react';\r\nimport { Group, Card,CardGrid, RichCell, Avatar } from '@vkontakte/vkui';\r\nimport { Icon24DollarCircleOutline } from '@vkontakte/icons';\r\nimport { connect } from 'react-redux';\r\nimport { setActiveUserPage } from '../../../redux/user-reducer';\r\n\r\nconst AttackFriends = ({friends,go,setActiveUserPage}) => {\r\n\tconst entryFriendsProfile = (e,id) => {\r\n\t\tsetActiveUserPage(id)\r\n\t\tgo(e)\r\n\t}\r\n\t\r\n\tconst friendsGroup\t= friends.map(u =>(\r\n\t\t<RichCell  onClick={(e) => entryFriendsProfile(e,u.id)}\r\n\t\t\tdata-to=\"pageView\"\r\n\t\t\tkey={u.id}\r\n\t\t\tbefore={<Avatar size={48} src={u.photo_200_orig} />}\r\n\t\t\tcaption=\"info\"\r\n\t\t\tafter=\"700 ₽\"\r\n\t\t\t>\r\n\t\t\t\t{u.first_name +\" \"+ u.last_name}\r\n\t\t</RichCell>\r\n\t))\r\n\treturn(\r\n        <Group>\r\n\t\t\t\t\t\t{friendsGroup}\r\n        </Group>\r\n\t)\r\n};\r\nconst mapStateToProps  = (state) => ({\r\n\tfriends:state.usersInfo.friends,\r\n})\r\nexport default connect(mapStateToProps,{setActiveUserPage})(AttackFriends)\r\n// export default AttackFriends","import React, { useState } from 'react';\r\nimport { Group, Card,CardGrid } from '@vkontakte/vkui';\r\nimport { Icon24DollarCircleOutline } from '@vkontakte/icons';\r\n\r\nconst AttackOther = ({friends}) => {\r\n    // const cardFriends\t= friends.map(u =><Card>{<img style={{width:\"100%\",height:\"200px\"}} src={u.photo_200_orig}/>}</Card>)\t\r\n\treturn(\r\n        <Group>\r\n            {/* <CardGrid size=\"s\">\r\n                {cardFriends}\r\n            </CardGrid> */}\r\n        </Group>\r\n\t)\r\n};\r\n\r\n\r\nexport default AttackOther","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar,PanelHeaderBack, Tabs, TabsItem, View } from '@vkontakte/vkui';\r\nimport { Icon24DollarCircleOutline } from '@vkontakte/icons';\r\nimport { connect } from 'react-redux';\r\nimport AttackFriends from './AttackFriends';\r\nimport AttackOther from './AttackOther';\r\nimport HeaderUser from '../../../components/Header/HeaderUser';\r\nimport { go } from '../../../redux/app-reducer';\r\n\r\n\r\nconst Attack = ({go,id,friends}) => {\r\n\tconst [activeTabs,setActiveTabs] = useState('friends');\r\n\treturn(\r\n\t<Panel id={id}>\r\n        <HeaderUser go={go}  headerName=\"Attack\" backButton=\"actionNavigator\"/>\r\n        <Group header={<Header mode=\"secondary\">Attack</Header>}>\r\n\t\t\t<Tabs>\r\n\t\t\t\t<TabsItem selected={activeTabs === \"friends\"} onClick={() => {\r\n\t\t\t\t\tsetActiveTabs(\"friends\")\r\n\t\t\t\t}}>\r\n\t\t\t\t\tfriends\r\n\t\t\t\t</TabsItem>\r\n\t\t\t\t<TabsItem selected={activeTabs === \"other\"} onClick={() => {\r\n\t\t\t\t\tsetActiveTabs(\"other\")\r\n\t\t\t\t}}>\r\n\t\t\t\t\tother \r\n\t\t\t\t</TabsItem>\r\n\t\t\t</Tabs>\r\n\t\t\t{activeTabs === \"friends\" && <AttackFriends go={go} friends={friends}/> }\r\n\t\t\t{activeTabs === \"other\" && <AttackOther/>}\r\n        </Group> \r\n        \r\n        \r\n\t</Panel>)\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n})\r\nexport default connect(mapStateToProps,{go})(Attack)","import React from 'react';\r\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar,PanelHeaderBack, CardGrid, Card } from '@vkontakte/vkui';\r\nimport { Icon24DollarCircleOutline } from '@vkontakte/icons';\r\nimport HeaderUser from '../components/Header/HeaderUser';\r\nconst DescriptionCreator = (create) => {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n    return ({id,go}) => (\r\n\t\t<Panel id={id}>\t\t\r\n\t\t\t<HeaderUser go={go}  headerName={create.what} backButton=\"inventory\"/>\r\n\r\n\t\t\t\t<Group header={<Header mode=\"secondary\">decription</Header>}>\r\n                    <Div>\r\n                    {create.desc}\r\n                    </Div>\r\n\t\t\t\t\t\r\n\t\t\t\t</Group>\r\n\t\t\t</Panel>\r\n\t\t)\r\n}\r\n\r\n\r\n\r\nexport default DescriptionCreator","import { firebaseAPI, DB_USER_MONEY,DB_USER_ROKET,DB_USER_HOUSE,DB_USER_PEOPLE,DB_USER_FOOD  } from \"../api/api\";\r\nimport { CHANGE_MONEY,CHANGE_HOUSE,CHANGE_PEOPLE,CHANGE_ROKET } from './inventory-reducer';\r\nimport {changeInventory,setInventory} from \"./inventory-reducer\"\r\nimport { getUserId } from \"./user-reducer\";\r\nconst SET_INIT_SUCCESS = \"AUTH/SET_INIT_SUCCESS\"\r\nconst SET_ACCESS_TOKEN = \"AUTH/SET_ACCESS_TOKEN\"\r\nexport const INIT_DATE = {\r\n    money:1000,\r\n    house:2,\r\n    people:5,\r\n    roket:5,\r\n    food:100,\r\n}\r\nlet init = {\r\n    init:false,\r\n    accessToken:null,\r\n};\r\n\r\nexport const authReducer = (state = init, action) => {\r\n    switch (action.type) {\r\n        case SET_INIT_SUCCESS:\r\n            return{\r\n                ...state,\r\n                init:true,\r\n            }\r\n        case SET_ACCESS_TOKEN:\r\n            return{\r\n                ...state,\r\n                accessToken:action.token,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n\r\nexport const setInitSuccess = (func = null) => {\r\n    return {\r\n      type:SET_INIT_SUCCESS,\r\n    };\r\n};\r\nexport const setAccessToken = (token) => {\r\n    return {\r\n      type:SET_ACCESS_TOKEN,\r\n      token,\r\n    };\r\n};\r\n\r\nexport const  getDbInventory =  (userId) => async (dispatch) =>  {\r\n    await firebaseAPI.getUserInventory(userId).then((snapshot) => { \r\n        let val = snapshot.val() \r\n        if (!val){\r\n            dispatch(setInventory(INIT_DATE))\r\n            return\r\n        } \r\n\r\n        Object.keys(INIT_DATE).forEach(key => {\r\n            if((key in val) == false){\r\n                val[key] = INIT_DATE[key]\r\n            }\r\n                \r\n        })\r\n        dispatch(setInventory(val))\r\n        return\r\n    })\r\n};\r\nexport const  setDbInventory =  (userId,inventory) => async (dispatch) =>  {\r\n    await firebaseAPI.updateFullUser(userId,{\r\n        [DB_USER_MONEY]:inventory.money,\r\n        [DB_USER_ROKET]:inventory.roket,\r\n        [DB_USER_HOUSE]:inventory.house,\r\n        [DB_USER_PEOPLE]:inventory.people,\r\n        [DB_USER_FOOD]:inventory.food,\r\n    })\r\n};\r\n","import { firebaseAPI,DB_TIMER_START, DB_TIMER_TIME } from '../api/api';\r\n\r\nasync function TimerCreator({user,name,time,repeat,consoleView},func) {\r\n    let _time = time\r\n    let oneTimer = true\r\n    let entry = null\r\n    let diff = 0\r\n    const GetServerTime =   async () => {\r\n        await firebaseAPI.getServerTime().on('value', function(offset) {\r\n            const offsetVal = offset.val() || 0;\r\n            entry = Date.now() + offsetVal;\r\n        });\r\n    }\r\n\r\n    GetServerTime()\r\n    const CreateTimerBD =  async () => {\r\n        _time = time\r\n        await GetServerTime()\r\n        firebaseAPI.updateTimerDB(user.id,name,DB_TIMER_START,entry) \r\n        firebaseAPI.updateTimerDB(user.id,name,DB_TIMER_TIME,time)\r\n        TimerFunc() \r\n    }\r\n    const TimerFunc = async () => {\r\n            GetServerTime()\r\n            _time = time - diff   \r\n            let timer = setInterval(() => {\r\n                _time -= 1000\r\n                // console.log(\"Осталось: \"+ _time/1000 + \"сек\")\r\n                if(_time <= 0){\r\n                    func() \r\n                    if (!repeat){\r\n                        clearInterval(timer);\r\n                    }\r\n                    else{\r\n                        diff = 0\r\n                        clearInterval(timer);\r\n                        CreateTimerBD()\r\n                    }\r\n                       \r\n                }\r\n            },1000)\r\n    }    \r\n   \r\n    if (!oneTimer) return\r\n    oneTimer = false\r\n\r\n        await firebaseAPI.getTimerDB(user.id).then((snapshot) => { \r\n            let val = snapshot.val()\r\n\r\n            if(!val || !val[name]){\r\n                CreateTimerBD()\r\n                return \r\n            }  \r\n           \r\n            \r\n            \r\n            \r\n            if (val[name].startTimer + val[name].timerTime <= entry){\r\n                func()\r\n                diff = - (val[name].startTimer + val[name].timerTime - entry)\r\n                if (!repeat) return\r\n                while (diff > time){\r\n                    func()\r\n                    diff -= time\r\n                }\r\n                    CreateTimerBD()\r\n            }\r\n            else{\r\n                diff = time - (val[name].startTimer + val[name].timerTime - entry)\r\n                TimerFunc()\r\n            }\r\n        })\r\n    return \r\n    \r\n}\r\n\r\nexport default TimerCreator","import { Button, Counter, Div, FormItem, Group, Input, Slider } from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { launchRoket } from '../../../actionCalculation/launchRoket';\r\nimport { changeInventory } from '../../../redux/inventory-reducer';\r\nimport { setActiveUserPage } from '../../../redux/user-reducer';\r\nconst AttackUserPage = ({activeUserPage,roket,inventoryProfile,changeInventory}) => {\r\n    const [roketSend,setRoketSend] = useState(1)\r\n    const roketSendUpdate = (num) => {\r\n        setRoketSend(roketSend+num)\r\n    }\r\n    const roketRange = (value) => {\r\n        if(value > roket){\r\n            setRoketSend(roket)\r\n            return\r\n        }\r\n        setRoketSend(Number(value))\r\n    }\r\n    // const launchRoket = () => {\r\n    //     if (roket <= 0){\r\n    //         return\r\n    //     }\r\n    //     changeInventory(CHANGE_ROKET,-1)\r\n    //     firebaseAPI.updateUser(activeUserPage,DB_USER_MONEY,inventoryProfile.money - 1000)\r\n    // }\t\r\n    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n    return(\r\n            <Group>\r\n                <Div>\r\n                    <FormItem>\r\n\r\n                        <Input value={roketSend} min=\"0\" max={roket} type=\"number\" onChange={e => roketRange(e.target.value)} />\r\n                       \r\n                    </FormItem>\r\n                    \r\n                    <FormItem>\r\n                        <Slider\r\n                            min={0}\r\n                            step={1}\r\n                            max={roket}\r\n                            value={roketSend}\r\n                            onChange={value => roketRange(value)}\r\n                        />\r\n                    </FormItem>\r\n                </Div>\r\n                <Div>\r\n                    <Button onClick={() => {launchRoket({countRoket:roketSend,UserId:activeUserPage,inventoryTarget:inventoryProfile,changeInventory:changeInventory},)}} mode=\"commerce\" size=\"l\" after={<Counter>{roketSend}</Counter>}>Attack</Button>\r\n                </Div>\r\n            </Group>\r\n    )\r\n}\r\nconst mapStateToProps  = (state) => ({\r\n    roket:state.myInventory.roket,\r\n\tactiveUserPage:state.usersInfo.activeUserPage,\r\n\tfriends:state.usersInfo.friends,\r\n})\r\nexport default connect(mapStateToProps,{setActiveUserPage,changeInventory})(AttackUserPage)\r\n// export default AttackUserPage;","import { DB_USER_ROKET, firebaseAPI } from \"../api/api\"\r\nimport { CHANGE_ROKET } from \"../redux/inventory-reducer\"\r\n\r\nexport const launchRoket = ({countRoket,UserId,inventoryTarget,changeInventory}) => {\r\n    changeInventory(CHANGE_ROKET,-countRoket)\r\n    debugger\r\n    if (countRoket <= 0) return\r\n\r\n    while (inventoryTarget.roket > 0 && countRoket  > 0){\r\n        inventoryTarget.roket -= 1\r\n        countRoket -= 1\r\n    }\r\n    debugger\r\n    while (countRoket  > 0){\r\n        inventoryTarget.house -= 1\r\n        inventoryTarget.people -= 4\r\n        countRoket -= 1\r\n    }  \r\n    console.log(countRoket,inventoryTarget)\r\n    debugger\r\n    \r\n    firebaseAPI.updateFullUser(UserId,inventoryTarget)\r\n}\r\n\r\n","import React from 'react';\r\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar,PanelHeaderBack, InfoRow, SimpleCell, Card, CardGrid, Link } from '@vkontakte/vkui';\r\nimport { Icon24DollarCircleOutline } from '@vkontakte/icons';\r\nimport { connect } from 'react-redux';\r\nimport {changeInventory} from \"../../redux/inventory-reducer\"\r\nimport {setFriends} from \"../../redux/user-reducer\"\r\nimport {setUser} from \"../../redux/user-reducer\"\r\nconst HeaderOther = ({go,backButton,headerName,money,friends,activeUserPage}) =>{\r\n    const userPageInfo = friends.find(user => user.id === activeUserPage)\r\n    return(\r\n            <>\r\n            {backButton ? \r\n            <PanelHeader\r\n                left={<PanelHeaderBack onClick={go} data-to={backButton}/>}\r\n            >\r\n                {headerName}\r\n            </PanelHeader>\r\n            :\r\n            <PanelHeader>\r\n                {headerName}\r\n            </PanelHeader>\r\n            }\r\n        \r\n            {userPageInfo &&\r\n            <Group header={<Header mode=\"secondary\">Profile</Header>}>\r\n                <Cell \r\n                    before={userPageInfo.photo_200_orig ? <Avatar src={userPageInfo.photo_200_orig}/> : null}\r\n                    description={userPageInfo.city && userPageInfo.city.title ? userPageInfo.city.title : ''}\r\n                    after={<div style={{display:'flex',alignItems:'center',color:'black'}}>{money}<Icon24DollarCircleOutline width={30} height={30}/></div>}\r\n                >\r\n                    {`${userPageInfo.first_name} ${userPageInfo.last_name}`}\r\n                </Cell>\r\n            </Group>}\r\n            </>\r\n        )\r\n} \r\n\r\nlet mapStateToProps = (state) => ({\r\n    activeUserPage:state.usersInfo.activeUserPage,\r\n\tfriends:state.usersInfo.friends,\r\n})\r\n\r\nexport default connect(mapStateToProps)(HeaderOther)","export default __webpack_public_path__ + \"static/media/moneyBackground.7e4765dd.jpg\";","export default __webpack_public_path__ + \"static/media/workerBackground.fb289e7f.jpg\";","import { Group, Header, Panel, ScreenSpinner, Tabs, TabsItem,CardGrid,Card } from '@vkontakte/vkui';\r\nimport React, { useState } from 'react';\r\nimport { Icon24DollarCircleOutline } from '@vkontakte/icons';\r\nimport { Icon44SmileOutline } from '@vkontakte/icons';\r\nimport { Icon24HomeOutline } from '@vkontakte/icons';\r\nimport { Icon24SendOutline } from '@vkontakte/icons';\r\nimport { Icon28MortarOutline } from '@vkontakte/icons';\r\nimport MoneyBackground from \"../../assets/images/moneyBackground.jpg\"\r\nimport WorkerBackground from \"../../assets/images/workerBackground.jpg\"\r\nimport styles from './PageView.module.css';\r\n// import { setActiveUserPage } from '../../redux/user-reducer';\r\n// import AttackUserPage from '../Action/Attack/AttackUserPage';\r\nconst CheckUserInfo = ({ id, go,inventoryProfile}) => {\t\r\n    const ImgSize = {\r\n        width:30,\r\n        height:30,\r\n    }\r\n    const PictureName = {\r\n        money:Icon24DollarCircleOutline,\r\n        people:Icon44SmileOutline,\r\n        house:Icon24HomeOutline,\r\n        roket:Icon24SendOutline,\r\n        food:Icon28MortarOutline,\r\n    }\t\r\n    const BackgroundName = {\r\n        money:MoneyBackground,\r\n        people:WorkerBackground,\r\n        house:null,\r\n        roket:null,\r\n        food:null,\r\n    }\r\n    const inv = Object.keys(inventoryProfile).map(key =>{\r\n        const Pic = PictureName[key]\r\n        return(\r\n            // \r\n                <Card key={key} className={styles.card}>\r\n                {BackgroundName[key] ? <img src={BackgroundName[key]} alt={\"logo\"}/> : null  } \r\n                <span>{inventoryProfile[key]}<Pic width={ImgSize.width} height={ImgSize.height}/></span>\r\n                     \r\n                </Card>\r\n        )    \r\n    })\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n    return(\r\n        <Group>\r\n            {/* <CardGrid size=\"s\">\r\n                <Card className={styles.card}>\r\n                    1000p\r\n                </Card>\r\n                <Card className={styles.card}>\r\n                </Card>\r\n                <Card className={styles.card}>\r\n                </Card>\r\n            </CardGrid> */}\r\n            <CardGrid size=\"s\">\r\n                {inv}\r\n            </CardGrid>\r\n        </Group>\r\n    )\r\n}\r\nexport default CheckUserInfo","import { Group, Header, Panel, ScreenSpinner, Tabs, TabsItem } from '@vkontakte/vkui';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport HeaderOther from '../../components/Header/HeaderOther';\r\nimport { INIT_DATE } from '../../redux/auth-reducer';\r\nimport { firebaseAPI } from '../../api/api';\r\nimport AttackUserPage from '../Action/Attack/AttackUserPage';\r\nimport CheckUserInfo from './CheckUserInfo';\r\nimport { go } from '../../redux/app-reducer';\r\nconst PageView = ({ id, go,activeUserPage}) => {\r\n    const [activeTabs,setActiveTabs] = useState('check');\t\r\n    const [getUserInfo,setGetUserInfo] = useState(null);\r\n    \r\n    useEffect(() => {\r\n        const getUser = async () => {\r\n            await firebaseAPI.getUserInventory(activeUserPage).then((snapshot) => { \r\n                const val = snapshot.val()\r\n                if (val == null){\r\n                    firebaseAPI.updateFullUser(activeUserPage,INIT_DATE)\r\n                    setGetUserInfo(INIT_DATE)\r\n                }\r\n                else{\r\n                    setGetUserInfo(val)\r\n                }\r\n                \r\n            })\t\r\n            \r\n        }\r\n        getUser()\r\n    },[])\r\n    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n    return(\r\n        <Panel id={id}>\r\n            {getUserInfo ? \r\n            <>\r\n            <HeaderOther go={go} headerName=\"Profile\" backButton=\"base\" money={getUserInfo.money}/>\r\n                <Group header={<Header mode=\"secondary\">Action</Header>}>\r\n                    <Tabs>\r\n                        <TabsItem selected={activeTabs === \"check\"} onClick={() => {\r\n                            setActiveTabs(\"check\")\r\n                        }}>\r\n                            check\r\n                        </TabsItem>\r\n                        <TabsItem selected={activeTabs === \"attack\"} onClick={() => {\r\n                            setActiveTabs(\"attack\")\r\n                        }}>\r\n                            attack \r\n                        </TabsItem>\r\n                    </Tabs>\r\n                    {activeTabs === \"check\" && <CheckUserInfo  inventoryProfile={getUserInfo} go={go}/> }\r\n                    {activeTabs === \"attack\" && <AttackUserPage inventoryProfile={getUserInfo}/>}\r\n                </Group> \r\n            </>\r\n             : <ScreenSpinner size='large' />}\r\n            \r\n        </Panel>\r\n    )\r\n}\r\nconst mapStateToProps  = (state) => ({\r\n\tactiveUserPage:state.usersInfo.activeUserPage,\r\n\tfriends:state.usersInfo.friends,\r\n})\r\nexport default connect(mapStateToProps,{go})(PageView)","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport { connect } from \"react-redux\";\nimport {changeInventory, CHANGE_MONEY,CHANGE_ROKET, setInventory} from \"./redux/inventory-reducer\"\nimport {setFriends} from \"./redux/user-reducer\"\nimport {setUser} from \"./redux/user-reducer\"\n\n\n//descriprion\nimport { HOUSE_DESCRIPTION, MONEY_DESCRIPTION, PEOPLE_DESCRIPTION, ROKET_DESCRIPTION,FOOD_DESCRIPTION } from './text/Description';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\nimport Base from './panels/Base';\nimport Inventory from './panels/Inventory';\nimport Friends from './panels/Friends';\nimport ActionNavigator from './panels/Action/ActionNavigator';\nimport Attack from './panels/Action/Attack/Attack';\nimport DescriptionCreator from './creator/DescriptionCreator';\n\nimport { firebaseAPI } from './api/api';\nimport { getDbInventory, setAccessToken, setInitSuccess,setDbInventory } from './redux/auth-reducer';\nimport firebase from './index';\nimport TimerCreator from './creator/TimerCreator';\nimport AttackUserPage from './panels/Action/Attack/AttackUserPage';\nimport PageView from './panels/PageView/PageView';\nimport { go } from './redux/app-reducer';\nconst APP_ID = 7903112;\nconst App = (props) => {\n\tconst [giveGold, setGiveGold] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\t//user\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tprops.setUser(user)\n\n\t\t\t//access_token\n\t\t\tconst userInfo = await bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": APP_ID, \"scope\": \"friends,status\"});\n\t\t\tprops.setAccessToken(userInfo.access_token)\n\n\t\t\t//User friends\n\t\t\tconst userFriends = await bridge.send(\"VKWebAppCallAPIMethod\", {\"method\": \"friends.get\", \"params\": {\"fields\":\"nickname,photo_200_orig\",\"v\":\"5.131\", \"access_token\":userInfo.access_token,}});\n\t\t\tprops.setFriends(userFriends.response.items)\n\t\t\t\n\t\t\tawait props.getDbInventory(user.id)\n\n\t\t\t\n\n\t\t\tprops.setInitSuccess()\n\t\t\tsetPopout(null);\n\t\t\t\n\t\t}\n\t\tfetchData();\n\t\t\n\t\t\n\t\t\n\t}, []);\n\t\n\tuseEffect(() => {\n\t\tif (!props.init) return\n\t\tasync function initTimer() {\n\t\t\t\n\t\t\tsetGiveGold(TimerCreator({\"name\":\"increaseMoney\",\"time\":1*20*1000,\"user\":props.user,\"repeat\":true},() => {\n\t\t\t\tprops.changeInventory(CHANGE_MONEY,+10)\n\t\t\t}))\n\t\t}\n\t\tinitTimer()\n\t\tfirebaseAPI.listenUpdateUser(props.user.id,props.setInventory)\n\t\tdebugger\n\t},[props.init])\n\tuseEffect(() => {\n\t\tif (props.init){\n\t\t\tprops.setDbInventory(props.user.id,props.inventory)\n\t\t}\n\t})\n\n\n\n\t\n\t//DescriptionCreator creates group with description\n\tconst DescriptionPanels = {\n\t\tMoneyDesc\t:DescriptionCreator({what:\"Money\",desc:MONEY_DESCRIPTION}),\n\t\tPeopleDesc\t:DescriptionCreator({what:\"People\",desc:PEOPLE_DESCRIPTION}),\n\t\tHouseDesc\t:DescriptionCreator({what:\"House\",desc:HOUSE_DESCRIPTION}),\n\t\tRoketDesc\t:DescriptionCreator({what:\"Roket\",desc:ROKET_DESCRIPTION}),\n\t\tFoodDesc\t:DescriptionCreator({what:\"Food\",desc:FOOD_DESCRIPTION}),\n\t}\n\tconst DescPanelsBlocks = Object.keys(DescriptionPanels).map(key => {\n\t\tconst DescPanel = DescriptionPanels[key];\n\t\tconst name = String(key)\n\t\tconst id = name.charAt(0).toLowerCase() + name.slice(1);\n\t\treturn(\n\t\t\t<DescPanel key={id}  id={id}  go={props.go}/>\n\t\t)\t\n\t})\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel={props.activePanel} popout={popout}>\n\t\t\t\t\t<Home id='home'  />\n\t\t\t\t\t<Base id='base'  />\n\t\t\t\t\t<Inventory id='inventory'/>\n\t\t\t\t\t<Friends id='friends'/>\n\n\t\t\t\t\t{/* Action Navigator */}\n\t\t\t\t\t<ActionNavigator id='actionNavigator'/>\n\t\t\t\t\t<Attack id='attack' />\n\t\t\t\t\t<PageView id='pageView'/>\n\t\t\t\t\t\n\t\t\t\t\t{/* Descriprion */}\n\t\t\t\t\t{DescPanelsBlocks}\n\t\t\t\t</View>\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\n\nlet mapStateToProps = (state) => ({\n\tinventory:state.myInventory,\n\tuser:state.usersInfo.user,\n\tinit:state.auth.init,\n\tactivePanel:state.appPage.activePanel,\n})\n\nexport default connect(mapStateToProps,{setDbInventory,changeInventory,setFriends,setUser,setInitSuccess,getDbInventory,setAccessToken,go,setInventory})(App)","export const  MONEY_DESCRIPTION = \"Плоти нологи\"\r\nexport const  PEOPLE_DESCRIPTION = \"Чисто рабы (не бань ТВИЧ)\"\r\nexport const  HOUSE_DESCRIPTION = \"Нужно же где-то жить\"\r\nexport const  ROKET_DESCRIPTION = \"БАМ БУХ БУДУМ\"\r\nexport const  FOOD_DESCRIPTION = \"Хавать вкусно\"\r\n\r\n","import { firebaseAPI, DB_USER_MONEY,DB_USER_ROKET,DB_USER_HOUSE,DB_USER_PEOPLE,DB_USER_FOOD  } from \"../api/api\";\r\nconst SET_ENTRY= \"TIME/SET_ENTRY\"\r\nconst SET_OLD_ENTRY= \"TIMESET_OLD_ENTRY\"\r\nconst SET_TIMER= \"TIME/SET_TIMER\"\r\n\r\nlet init = {\r\n    entry:null,\r\n    oldEntry:null,\r\n    timer:null,\r\n    startTimer:null,\r\n};\r\n\r\nexport const timeReducer = (state = init, action) => {\r\n    switch (action.type) {\r\n        case SET_ENTRY:\r\n            return{\r\n                ...state,\r\n                entry:action.time\r\n            }\r\n        case SET_OLD_ENTRY:\r\n            return{\r\n                ...state,\r\n                oldEntry:action.time\r\n            }\r\n        case SET_TIMER:\r\n            return{\r\n                ...state,\r\n                timer:action.time\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\nexport const setEntry = (time) => {\r\n    return {\r\n        type:SET_ENTRY,\r\n        time,\r\n    };\r\n};\r\nexport const setOldEntry = (time) => {\r\n    return {\r\n        type:SET_OLD_ENTRY,\r\n        time,\r\n    };\r\n};\r\nexport const setTimer = (time) => {\r\n    return {\r\n        type:SET_TIMER,\r\n        time,\r\n    };\r\n};\r\nexport const getServerTime = () => async (dispatch) => {\r\n    let serverTime = 0\r\n    await firebaseAPI.getServerTime().on('value', function(offset) {\r\n        const offsetVal = offset.val() || 0;\r\n        serverTime = Date.now() + offsetVal;\r\n        dispatch(setEntry(serverTime))\r\n    });\r\n    \r\n    // dispatch(setBDEntryTime(serverTime))\r\n};\r\n\r\nexport const getBDTimeUser = (user) => async (dispatch) => {\r\n    await firebaseAPI.getTimeUserBD(user.id).then((snapshot) => {\r\n        let val = snapshot.val() \r\n        if(!val) return\r\n\r\n        dispatch(setOldEntry(val.entry))\r\n        \r\n    })\r\n    \r\n};\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport { inventoryReducer } from \"./inventory-reducer\";\r\nimport { userReducer } from \"./user-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport { authReducer } from \"./auth-reducer\";\r\nimport { timeReducer } from \"./time-reducer\";\r\nimport { appReducer } from \"./app-reducer\";\r\nlet reducers = combineReducers({\r\n    myInventory:inventoryReducer,\r\n    usersInfo:userReducer,\r\n    auth:authReducer,\r\n    time:timeReducer,\r\n    appPage:appReducer,\r\n})\r\n\r\nlet store = createStore(reducers,applyMiddleware(thunkMiddleware));\r\n\r\nexport default store","import React, { createContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\nimport store from \"./redux/redux-store\";\nimport { Provider } from \"react-redux\";\nimport firebase from 'firebase';\nimport \"firebase/database\";\n\n\n\n//7903112\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n\n// Initialize Firebase\n// var firebaseConfig = ;\n// Initialize Firebase\nfirebase.initializeApp({\n  apiKey: \"AIzaSyAaCTI89WAScNMKK-5pzGmt5qcnF50U6aM\",\n  authDomain: \"users-f9e77.firebaseapp.com\",\n  projectId: \"users-f9e77\",\n  storageBucket: \"users-f9e77.appspot.com\",\n  messagingSenderId: \"730375624460\",\n  appId: \"1:730375624460:web:e07c070bceaf98b8091b29\",\n  measurementId: \"G-HR2BM8955Q\"\n});\nfirebase.analytics();\nexport default firebase\n\n// var gateWayRef = firebase.database().ref(\"223207671\");\n\n\n\t\t\n\nlet rerenderEntireTree = (state) => {\n  ReactDOM.render(\n    \n    <Provider store={store}>\n      <App/> \n    </Provider>,\n    document.getElementById(\"root\")\n  );\n};\nrerenderEntireTree(store.getState());\nstore.subscribe(() => {\n  let state = store.getState();\n  rerenderEntireTree(state);\n});","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"PageView_card__32kXZ\"};"],"sourceRoot":""}